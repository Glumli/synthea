From acdfe41b5d5b90f3e4a1390a9b908d912c76123d Mon Sep 17 00:00:00 2001
From: "Abraham, Brendan" <babraham@mitre.org>
Date: Wed, 31 Mar 2021 11:46:18 -0400
Subject: [PATCH] added logic to only generate cardiac patients

---
 .../java/org/mitre/synthea/engine/Generator.java   | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/mitre/synthea/engine/Generator.java b/src/main/java/org/mitre/synthea/engine/Generator.java
index df4d026e..6163ccd1 100644
--- a/src/main/java/org/mitre/synthea/engine/Generator.java
+++ b/src/main/java/org/mitre/synthea/engine/Generator.java
@@ -475,6 +475,13 @@ public class Generator implements RandomNumberGenerator {
           // note that this skips ahead to the while check and doesn't automatically re-loop
         }
 
+        if (!person.attributes.containsKey("cardiac_surgery")) {
+          // rotate the seed so the next attempt gets a consistent but different one
+          personSeed = randomForDemographics.nextLong();
+          continue;
+        }
+
         recordPerson(person, index);
 
         tryNumber++;
@@ -500,7 +507,7 @@ public class Generator implements RandomNumberGenerator {
         // TODO - export is DESTRUCTIVE when it filters out data
         // this means export must be the LAST THING done with the person
         Exporter.export(person, finishTime, exporterRuntimeOptions);
-      } while (!patientMeetsCriteria(isAlive, providerCount, providerMinimum));
+      } while (!patientMeetsCriteria(person, isAlive, providerCount, providerMinimum));
       //repeat while patient doesn't meet criteria
       // if the patient is alive and we want only dead ones => loop & try again
       //  (and dont even export, see above)
@@ -524,7 +531,10 @@ public class Generator implements RandomNumberGenerator {
    * @param providerMinimum Minimum number of providers required
    * @return true if patient meets criteria, false otherwise
    */
-  public boolean patientMeetsCriteria(boolean isAlive, int providerCount, int providerMinimum) {
+  public boolean patientMeetsCriteria(Person person, boolean isAlive, int providerCount, int providerMinimum) {
+    if (!person.attributes.containsKey("cardiac_surgery")) {
+      return false;
+   }
     if (!isAlive && !onlyDeadPatients && this.options.overflow) { 
       // if patient is not alive and the criteria isn't dead patients new patient is needed
       return false;
-- 
2.24.3 (Apple Git-128)

